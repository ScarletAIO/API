"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const api = require("api")('@virustotal/v3.0#7r415jxl3ofbsw8');
exports.default = new class Malware {
    constructor() {
        this.sdk = api;
        this.key = process.env.VIRUSTOTAL_API_KEY;
    }
    detect(file) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.sdk.post('/files', {
                file: file
            }, {
                Accept: 'application/json',
                'x-apikey': this.key,
                'Content-Type': 'multipart/mixed'
            })
                .then((res) => {
                this.getAnalysis(res.data.id);
            })
                .catch((err) => {
                console.log(err);
            });
        });
    }
    getAnalysis(id) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.sdk.analysis({
                id: id,
                'x-apikey': this.key
            })
                .then((res) => {
                return res.data;
            })
                .catch((err) => {
                console.log(err);
            });
        });
    }
};
